/*!
 * 
 *   map-everything - Add a map() method to the prototypes of Object, String, Set, and Map.
 *   Author: Alex MacArthur
 *   Version: v0.0.1
 *   URL: https://github.com/alexmacarthur/map-everything#readme
 *   License: MIT
 * 
 */
!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.mapEverything=n():t.mapEverything=n()}(this,function(){return function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var o in t)e.d(r,o,function(n){return t[n]}.bind(null,o));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){"use strict";function r(t){return function(t){if(Array.isArray(t)){for(var n=0,e=new Array(t.length);n<t.length;n++)e[n]=t[n];return e}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(){Object.prototype.map=function(t){var n=Object.values(this).map(function(n){return t.call(null,n)}),e={};return Object.keys(this).forEach(function(t,r){e[t]=n[r]}),e}}function u(){Map.prototype.map=function(t){var n=this,e=r(this).map(function(e,r){return e=t.call(window,e,r,n)}),o=new Map;return e.forEach(function(t){o.set(t[0],t[1])}),o}}function i(){Set.prototype.map=function(t){var n=this,e=r(this).map(function(e,r){return t.call(window,e,r,n)});return new Set(e)}}function c(){String.prototype.map=function(t){var n=this;return this.split("").map(function(e,r){return t.call(window,e,r,n)}).join("")}}function f(){o(),c(),u(),i()}e.r(n),e.d(n,"attachToObjectPrototype",function(){return o}),e.d(n,"attachToMapPrototype",function(){return u}),e.d(n,"attachToSetPrototype",function(){return i}),e.d(n,"attachToStringPrototype",function(){return c}),e.d(n,"default",function(){return f})}]).default});